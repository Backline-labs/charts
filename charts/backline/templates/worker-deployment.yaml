apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: {{ default .Release.Namespace .Values.namespaceOverride | trunc 63 | trimSuffix "-" }}
  labels:
    app: worker
  annotations:
    checksum/config: {{(include (print $.Template.BasePath "/worker-configmap.yaml") . | sha256sum) | quote }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      serviceAccountName: worker
      imagePullSecrets:
        - name: {{ include "secretname.dockerconfig" . }}
      securityContext:
      {{- include "common.podSecurityContext" . | nindent 8 }}
      containers:
        - name: worker
          image: "{{ .Values.worker.image.registry }}/{{ .Values.worker.image.name }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.worker.service.httpPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.worker.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.worker.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: worker
            {{- if and .Values.worker.envFromSecrets (gt (len .Values.worker.envFromSecrets) 0) }}
            {{- range .Values.worker.envFromSecrets }}
            - secretRef:
                name: {{ .ref }}
                {{- if .key }}
                optional: false
                {{- end }}
            {{- end }}
            {{- end }}
          env:
          {{- if and .Values.worker.env (gt (len .Values.worker.env) 0) }}
            {{- toYaml .Values.worker.env | nindent 12 }}
          {{- end }}
            - name: ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: accesskey
                  key: ACCESS_KEY
          volumeMounts:
            - mountPath: /worker-storage/data
              name: worker-storage
            {{- include "adot.logVolumeMount" (dict "readOnly" false) | nindent 12 }}
        {{- include "adot.sidecar" . | nindent 8 }}
      volumes:
        - name: worker-storage
          persistentVolumeClaim:
            claimName: {{ .Values.worker.storage.pvc.name }}
      {{- include "adot.volumes" . | nindent 8 }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

